#version 450

layout (location = 0) uniform uvec2 size;

layout (std430, binding = 0) buffer WAVE {
	float wave[];
};

layout (std430, binding = 1) buffer NOISE {
	float noise[];
};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

void main() {
	uint x = gl_GlobalInvocationID.x;
	uint y = gl_GlobalInvocationID.y; 
	uint index = y * size.x + x;
	
	float increment = 6.2831f / float(size.x);
	increment *= 15.0f;
	
	float angle = wave[index] * 6.2831f;
	vec2 off = vec2(cos(angle), sin(angle));
	vec2 factor;
	factor.x = sin(float(x) * increment + off.x * 1.0f) + 1.0f;
	factor.x *= 0.5f;
	factor.x = 1.0f - pow(factor.x, 0.8f);
	factor.y = sin(float(y) * increment + off.y * 1.0f) + 1.0f;
	factor.y *= 0.5f;
	factor.y = 1.0f - pow(factor.y, 0.8f);
	
	wave[index] = factor.x * factor.y;
	wave[index] /= 2.0f;
}