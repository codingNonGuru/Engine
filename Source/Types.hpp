#pragma once

#include <GL/glew.h>

enum class CameraTypes {ORTHO, PERSPECTIVE};

enum class AttributeElementTypes
{
	INTEGER_1, INTEGER_2, INTEGER_3, INTEGER_4,
	FLOAT_1, FLOAT_2, FLOAT_3, FLOAT_4,
	UINTEGER_1, UINTEGER_2, UINTEGER_3, UINTEGER_4,
	MATRIX_3, MATRIX_4
};

enum class MeshAttributeTypes
{
	POSITION,
	VERTEX_NORMAL,
	FACE_NORMAL,
	TEXTURE_COORDS,
	WEIGHT,
	COLOR
};

enum class ShaderTypes
{
	VERTEX = GL_VERTEX_SHADER,
	FRAGMENT = GL_FRAGMENT_SHADER,
	GEOMETRY = GL_GEOMETRY_SHADER,
	TESSELLATION_CONTROL = GL_TESS_CONTROL_SHADER,
	TESSELLATION_EVALUATION = GL_TESS_EVALUATION_SHADER,
	COMPUTE = GL_COMPUTE_SHADER
};
